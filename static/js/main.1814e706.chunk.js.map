{"version":3,"sources":["constants.js","imgs/man.svg","imgs/cow.svg","imgs/pig.svg","imgs/chicken.svg","App.js","index.js"],"names":["BOVIE_MEAT","PIG_MEAT","POULTRY_MEAT","round","value","decimals","Number","Math","options","countries","map","country","label","LifeExpentancy","restAge","className","src","manIcon","Card","isEaten","icon","amount","App","useState","currentCountry","setCountry","age","setAge","eatenBovine","eatenPig","eatenPoultry","savedBovine","savedPig","savedPoultry","a","b","c","sqrt","bovineConsumption","pigConsumption","poultryConsumption","cards","cowIcon","eaten","canBeSaved","pigIcon","chickenIcon","selectStyles","control","styles","border","defaultValue","onChange","placeholder","e","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1814e706.chunk.js","sourcesContent":["export const BOVIE_MEAT = {\r\n    usefulMass: 0.62,\r\n    averageMass: 550,\r\n  };\r\n  \r\n  export const PIG_MEAT = {\r\n    usefulMass: 0.7,\r\n    averageMass: 130,\r\n  };\r\n  \r\n  export const POULTRY_MEAT = {\r\n    usefulMass: 0.71,\r\n    averageMass: 2.6,\r\n  };","export default __webpack_public_path__ + \"static/media/man.ae03e503.svg\";","export default __webpack_public_path__ + \"static/media/cow.08f15eea.svg\";","export default __webpack_public_path__ + \"static/media/pig.9cccdf26.svg\";","export default __webpack_public_path__ + \"static/media/chicken.54f655a2.svg\";","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport \"./App.css\";\nimport countries from \"./final.json\";\nimport { BOVIE_MEAT, PIG_MEAT, POULTRY_MEAT } from \"./constants.js\";\nimport manIcon from \"./imgs/man.svg\";\nimport cowIcon from \"./imgs/cow.svg\";\nimport pigIcon from \"./imgs/pig.svg\";\nimport chickenIcon from \"./imgs/chicken.svg\";\n\nfunction round(value, decimals) {\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n}\n\nconst options = countries.map((country) => ({\n  ...country,\n  label: country.country,\n  value: country.country,\n}));\n\n\nconst LifeExpentancy = ({ restAge }) => <div className=\"life-block\">\n  <label>\n    <div className=\"input-label\">Rest of life</div>\n    <div className=\"life-block_wrapper\">\n      <img src={manIcon} className=\"life-block_icon\" />\n      {restAge ? <div className=\"life-block_amount\">{restAge}</div> : null}\n    </div>\n  </label>\n</div>;\n\nconst Card = ({isEaten, icon, amount}) => {\n  return <div className=\"card\">\n    <img src={icon} className=\"card_icon\" />\n    <div className={`card_amount ${ !isEaten ? 'card_amount--green' : null }`}>{amount}</div>\n  </div>\n}\n\nconst App = () => {\n  const [currentCountry, setCountry] = useState(null);\n  const [age, setAge] = useState(null);\n\n  let restAge = 0,\n    eatenBovine = 0,\n    eatenPig = 0,\n    eatenPoultry = 0,\n    savedBovine = 0,\n    savedPig = 0,\n    savedPoultry = 0;\n\n  if (currentCountry) {\n    const { a, b, c } = currentCountry;\n    restAge = round(a + (Math.sqrt((age - b) ** 2 + c) - age) / 2, 1);\n\n    eatenBovine = round(\n      (currentCountry.bovineConsumption /\n        BOVIE_MEAT.usefulMass /\n        BOVIE_MEAT.averageMass) *\n        age,\n      1\n    );\n    eatenPig = round(\n      (currentCountry.pigConsumption /\n        PIG_MEAT.usefulMass /\n        PIG_MEAT.averageMass) *\n        age,\n      1\n    );\n    eatenPoultry = round(\n      (currentCountry.poultryConsumption /\n        POULTRY_MEAT.usefulMass /\n        POULTRY_MEAT.averageMass) *\n        age,\n      1\n    );\n\n    savedBovine = round(\n      (currentCountry.bovineConsumption /\n        BOVIE_MEAT.usefulMass /\n        BOVIE_MEAT.averageMass) *\n        restAge,\n      1\n    );\n    savedPig = round(\n      (currentCountry.pigConsumption /\n        PIG_MEAT.usefulMass /\n        PIG_MEAT.averageMass) *\n        restAge,\n      1\n    );\n    savedPoultry = round(\n      (currentCountry.poultryConsumption /\n        POULTRY_MEAT.usefulMass /\n        POULTRY_MEAT.averageMass) *\n        restAge,\n      1\n    );\n  }\n\n  let cards = [\n    { icon: cowIcon, eaten: eatenBovine, canBeSaved: savedBovine},\n    { icon: pigIcon, eaten: eatenPig, canBeSaved: savedPig},\n    { icon: chickenIcon, eaten: eatenPoultry, canBeSaved: savedPoultry},\n  ];\n\n  let selectStyles = {\n    control: (styles) => ({\n      ...styles,\n      // backgroundColor: 'black',\n      border: \"3px solid #92C367\",\n    }),\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"header_title\">Vegan calculator</div>\n        <div className=\"header_local-button\"></div>\n      </header>\n\n      <div className=\"filter-container\">\n        <div className=\"input-container country-input\">\n          <label>\n            <div className=\"input-label\">Введите страну</div>\n            <Select\n              defaultValue={currentCountry}\n              onChange={setCountry}\n              options={options}\n              styles={selectStyles}\n              placeholder={\"Select your country\"}\n            />\n          </label>\n        </div>\n        <div className=\"input-container\">\n          <label>\n            <div className=\"input-label\">Введите возраст</div>\n            <input\n              className=\"age-input\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              type=\"number\"\n              placeholder=\"Enter your age\"\n            ></input>\n          </label>\n        </div>\n      <LifeExpentancy restAge={ restAge } />\n      </div>\n\n      <div>\n        <div>Already</div>\n        <div className=\"cards\"> \n          {cards && cards.map(({icon, eaten}) => <Card icon={icon} isEaten amount={eaten} />)}\n        </div>\n      </div>\n      \n      <div>\n        <div>Can be Saved</div>\n        <div className=\"cards\"> \n          {cards && cards.map(({icon, canBeSaved}) => <Card icon={icon} amount={canBeSaved} />)}\n        </div>\n      </div>\n\n      \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}